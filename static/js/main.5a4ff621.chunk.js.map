{"version":3,"sources":["components/form/Form.js","components/list/List.js","components/home/Home.js","App.js","index.js"],"names":["Form","handleSubmit","handleEdit","useState","name","setName","quantity","setQuantity","inEditMode","setInEditMode","useEffect","document","getElementById","readOnly","newName","trim","newQuantity","Number","length","disabled","console","log","qt","className","id","type","placeholder","value","onChange","event","target","min","required","onClick","List","groceryList","setEditItem","handleDelete","map","item","Home","list","localStorage","getItem","arr","JSON","parse","getGroceryList","setGroceryList","count","setCount","editItem","element","editListItem","isInList","forEach","isAlready","newQt","increamentQuantity","push","addListItem","prevCount","setItem","stringify","newList","filter","listitem","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.5a4ff621.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst Form = ({ handleSubmit, handleEdit }) => {\n  const [name, setName] = useState(\"\");\n  const [quantity, setQuantity] = useState(\"\");\n  const [inEditMode, setInEditMode] = useState(false);\n\n  useEffect(() => {\n    if (inEditMode) {\n      document.getElementById(\"inp-item\").readOnly = true;\n    } else {\n      document.getElementById(\"inp-item\").readOnly = false;\n    }\n  }, [inEditMode]);\n  useEffect(() => {\n    let newName = name.trim();\n    let newQuantity = Number(quantity);\n    if (newName.length > 0 && newQuantity > 0) {\n      document.getElementById(\"add-btn\").disabled = false;\n    } else {\n      document.getElementById(\"add-btn\").disabled = true;\n    }\n  }, [name, quantity]);\n\n  useEffect(() => {\n    if (handleEdit.name !== \"\") {\n      console.log(\"welcome\");\n      setInEditMode(true);\n      setName(handleEdit.name);\n      setQuantity(handleEdit.qt);\n    }\n  }, [handleEdit]);\n\n  function handleName(event) {\n    setName(event.target.value);\n  }\n  function handleQuantity(event) {\n    if (Number(event.target.value) > 0) setQuantity(event.target.value);\n    else setQuantity(\"\");\n  }\n  function handleSubmitForm() {\n    let newName = name.trim();\n    let newQuantity = Number(quantity);\n    handleSubmit(newName, newQuantity, inEditMode);\n    setName(\"\");\n    setQuantity(\"\");\n    setInEditMode(false);\n  }\n  return (\n    <>\n      <div className=\"container1\">\n        <h1 className=\"item-heading\" id=\"action-heading\">\n          {inEditMode ? \"Edit Grocery Item\" : \"Add Grocery Item\"}\n        </h1>\n        <div className=\"add-container\">\n          <p className=\"inp-title\">Item Name</p>\n          <input\n            type=\"text\"\n            placeholder=\"Add Item Name\"\n            className=\"inp-item\"\n            id=\"inp-item\"\n            value={name}\n            onChange={handleName}\n          />\n          <p className=\"inp-title\">Quantity</p>\n          <input\n            type=\"number\"\n            placeholder=\"Add Item Quantity\"\n            className=\"inp-qt\"\n            id=\"inp-qt\"\n            value={quantity}\n            min=\"1\"\n            required\n            onChange={handleQuantity}\n          />\n          <button id=\"add-btn\" onClick={handleSubmitForm}>\n            {inEditMode ? \"Edit Item\" : \"Add Item\"}\n          </button>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Form;\n","import React from \"react\";\n\nconst List = ({ groceryList, setEditItem, handleDelete }) => {\n  return (\n    <>\n      <div className=\"container2\">\n        <h1 className=\"item-heading\">Grocery List</h1>\n        <div className=\"add-container\" id=\"list-item\">\n          {groceryList.map((item) => {\n            return (\n              <div className=\"item\">\n                <div className=\"item-text\">\n                  <div className=\"item-text-1\">{item.name}</div>\n                  <div className=\"item-text-2\">x {item.qt}</div>\n                </div>\n                <button className=\"item-edit\" onClick={() => setEditItem(item)}>\n                  Edit\n                </button>\n                <button\n                  className=\"item-delete\"\n                  onClick={() => handleDelete(item)}\n                >\n                  Delete\n                </button>\n              </div>\n            );\n          })}\n          {groceryList.length === 0 ? (\n            <p id=\"nothing\">Nothing to Show!!</p>\n          ) : (\n            \"\"\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default List;\n","import React, { useState, useEffect } from \"react\";\nimport Form from \"../form/Form.js\";\nimport List from \"../list/List.js\";\nimport \"./home.css\";\n\nconst Home = () => {\n  const [groceryList, setGroceryList] = useState(getGroceryList());\n  const [count, setCount] = useState(0);\n  const [editItem, setEditItem] = useState({ name: \"\", qt: \"\" });\n  useEffect(() => {\n    console.log(\"Use Effect\");\n    localStorage.setItem(\"groceryList\", JSON.stringify(groceryList));\n  }, [count]);\n\n  function getGroceryList() {\n    let list = localStorage.getItem(\"groceryList\");\n    let arr = [];\n    if (list !== null) arr = JSON.parse(list);\n    return arr;\n  }\n\n  function handleDelete(item) {\n    let list = groceryList;\n    let newList = list.filter((listitem) => {\n      if (listitem.name === item.name) {\n        return false;\n      }\n      return true;\n    });\n    setGroceryList(newList);\n    setCount((prevCount) => prevCount + 1);\n  }\n  function editListItem(element) {\n    let list = groceryList;\n    list = list.map((item) => {\n      if (item.name === element.name) {\n        return { ...item, qt: element.qt };\n      } else {\n        return item;\n      }\n    });\n    setGroceryList(list);\n  }\n  function isAlready(element) {\n    let isInList = false;\n    groceryList.forEach((item) => {\n      if (item.name === element.name) {\n        isInList = true;\n      }\n    });\n    return isInList;\n  }\n  function increamentQuantity(element) {\n    let list = groceryList;\n    console.log(element);\n    list = list.map((item) => {\n      if (item.name === element.name) {\n        let newQt = element.qt + item.qt;\n        return { ...item, qt: newQt };\n      }\n      return item;\n    });\n    setGroceryList(list);\n  }\n  function addListItem(element) {\n    let list = groceryList;\n    list.push(element);\n    setGroceryList(list);\n  }\n  function handleSubmit(name, quantity, inEditMode) {\n    const element = {\n      name: name,\n      qt: quantity,\n    };\n    if (inEditMode) {\n      editListItem(element);\n    } else if (isAlready(element)) {\n      increamentQuantity(element);\n    } else {\n      addListItem(element);\n    }\n\n    setCount((prevCount) => prevCount + 1);\n  }\n  return (\n    <>\n      <div id=\"app\">\n        <div className=\"add-flow\">\n          <div className=\"container\">\n            <Form\n              handleSubmit={(name, quantity, inEditMode) =>\n                handleSubmit(name, quantity, inEditMode)\n              }\n              handleEdit={editItem}\n            />\n            <List\n              groceryList={groceryList}\n              handleDelete={(item) => handleDelete(item)}\n              setEditItem={(item) => setEditItem(item)}\n            />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Home;\n","import \"./App.css\";\nimport Home from \"./components/home/Home.js\";\nfunction App() {\n  return <Home />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}